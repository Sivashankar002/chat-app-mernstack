{"version":3,"sources":["components/Authentication/Signup.js","Context/ChatProvider.js","components/Authentication/Login.js","Pages/Homepage.js","components/ChatBox.js","components/miscellaneous/ProfileModal.js","components/ChatLoading.js","components/UserAvatar/UserListItem.js","components/miscellaneous/SideDrawer.js","components/MyChats.js","Pages/ChatPage.js","App.js","index.js"],"names":["Signup","show","setShow","useState","name","setName","email","setEmail","confirmpassword","setConfirmpassword","password","setPassword","pic","setPic","loading","setLoading","toast","useToast","history","useHistory","handleClick","_jsxs","VStack","spacing","color","children","FormControl","id","isRequired","_jsx","FormLabel","Input","placeholder","onChange","e","target","value","InputGroup","type","InputRightElement","width","onClick","Button","h","size","p","accept","pics","undefined","title","status","duration","isClosable","position","console","log","data","FormData","append","fetch","method","body","then","res","json","public_id","toString","catch","err","postDetails","files","colorScheme","style","marginTop","async","config","headers","axios","post","localStorage","setItem","JSON","stringify","pushState","error","description","response","message","isLoading","ChatContext","createContext","ChatState","useContext","ChatProvider","_ref","user","setUser","selectedChat","setSelectedChat","chats","setChats","useEffect","userInfo","parse","getItem","push","Provider","Login","variant","Homepage","Container","maxW","centerContent","Box","d","justifyContent","bg","w","m","borderRadius","borderWidth","Text","fontSize","fontFamily","Tabs","TabList","mb","Tab","TabPanels","TabPanel","ChatBox","ProfileModal","isOpen","onOpen","onClose","useDisclosure","_Fragment","IconButton","base","icon","ViewIcon","Modal","isCentered","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","flexDir","alignItems","Image","boxSize","src","alt","md","ModalFooter","mr","ChatLoading","Stack","Skeleton","height","UserListItem","handleFunction","cursor","_hover","background","px","py","Avatar","SideDrawer","search","setSearch","searchResult","setSearchResult","loadingChat","setLoadingChat","accessChat","Authorization","token","userId","find","c","_id","display","Tooltip","label","hasArrow","placement","class","Menu","MenuButton","BellIcon","as","rightIcon","ChevronDownIcon","MenuList","MenuDivider","MenuItem","logoutHandler","removeItem","Drawer","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","DrawerBody","pb","get","map","Spinner","ml","MyChats","loggedUser","setLoggedUser","fetchChats","ChatPage","App","className","Route","path","component","exact","ReactDOM","render","BrowserRouter","ChakraProvider","document","getElementById"],"mappings":"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","file":"static/js/main.fbf89356.chunk.js","sourcesContent":["import React, {useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  useToast,\r\n  VStack,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport axios from \"axios\";\r\n\r\n\r\nconst Signup = () => {\r\n  const [show, setShow] = useState(false);\r\n  const [name, setName] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [confirmpassword, setConfirmpassword] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [pic, setPic] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n  const handleClick = () => setShow(!show);\r\n\r\n  const postDetails = (pics) => {\r\n    setLoading(true);\r\n    if (pics === undefined) {\r\n      toast({\r\n        title: \"Please select an image!\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    console.log(pics);\r\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n      const data = new FormData();\r\n      data.append(\"file\", pics);\r\n      data.append(\"upload_preset\", \"chat-app\");\r\n      data.append(\"cloud_name\", \"sivashankar\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/sivashankar/image/upload\", {\r\n        method: \"POST\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPic(data.public_id.toString());\r\n          setLoading(false);\r\n          console.log(data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      toast({\r\n        title: \"Please select an image!\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n      //return;\r\n    }\r\n  };\r\n\r\n  const submitHandler = async () => {\r\n    setLoading(true);\r\n    if (!name || !email || !password || !confirmpassword) {\r\n      toast({\r\n        title: \"Please fill all the fields!\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    if (password !== confirmpassword) {\r\n      toast({\r\n        title: \"Passwords do not match!\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        \"/api/user\",\r\n        { name, email, password, pic },\r\n        config\r\n      );\r\n      toast({\r\n        title: \"Registration Successful\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setLoading(false);\r\n      history.pushState(\"/chats\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occurred!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"5px\" color=\"black\">\r\n      <FormControl id=\"first-name\" isRequired>\r\n        <FormLabel>Name</FormLabel>\r\n        <Input\r\n          placeholder=\"Enter your Name\"\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"email\" isRequired>\r\n        <FormLabel>Email</FormLabel>\r\n        <Input\r\n          placeholder=\"Enter your Email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Password</FormLabel>\r\n        <InputGroup>\r\n          <Input\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Enter your Password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\" onClick={handleClick}>\r\n            <Button h=\"1.75rem\" size=\"sm\">\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Confirm Password</FormLabel>\r\n        <InputGroup size=\"md\">\r\n          <Input\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Confirm password\"\r\n            onChange={(e) => setConfirmpassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <FormControl id=\"pic\">\r\n        <FormLabel>Upload your Picture</FormLabel>\r\n        <Input\r\n          type=\"file\"\r\n          p={1.5}\r\n          accept=\"image/*\"\r\n          onChange={(e) => postDetails(e.target.files[0])}\r\n        />\r\n      </FormControl>\r\n      <Button\r\n        colorScheme=\"blue\"\r\n        width=\"100%\"\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n        isLoading={loading}\r\n      >\r\n        Sign Up\r\n      </Button>\r\n    </VStack>\r\n  );\r\n}\r\nexport default Signup;\r\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ChatContext = createContext();\r\n\r\nconst ChatProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [selectedChat, setSelectedChat] = useState();\r\n  const [chats, setChats] = useState([]);\r\n  const history = useHistory(); // Ensure this is within a Router context\r\n\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    setUser(userInfo);\r\n    console.log(\"User Info:\", userInfo);\r\n\r\n    if (!userInfo) {\r\n      history.push(\"/\"); // Redirect if no userInfo is found\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <ChatContext.Provider value={{ user, setUser, selectedChat, setSelectedChat,chats,setChats }}>\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook to use the Chat Context\r\nexport const ChatState = () => {\r\n  return useContext(ChatContext);\r\n};\r\n\r\nexport default ChatProvider;\r\n","import React,{useState} from 'react';\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  VStack,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\n\r\nconst Login = () => {\r\n  const [show, setShow] = useState(false); \r\n  const [email, setEmail] = useState(); \r\n  const [password, setPassword] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const toast = useToast();\r\n  const handleClick = () => setShow(!show);\r\n\r\n  const history = useHistory();\r\n  const { setUser } = ChatState();\r\n  \r\n  const submitHandler = async () => {\r\n    setLoading(true);\r\n    if (!email || !password) {\r\n      toast({\r\n        title: \"Please fill all the fields!\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    \r\n    \r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        \"/api/user/login\",\r\n        {email, password },\r\n        config\r\n      );\r\n      toast({\r\n        title: \"Login Successful\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setUser(data);\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setLoading(false);\r\n      history.push(\"/chats\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occurred!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n   };\r\n  \r\n  return (\r\n    <VStack spacing=\"5px\" color=\"black\">\r\n      <FormControl id=\"email\" isRequired>\r\n        <FormLabel>Email</FormLabel>\r\n        <Input\r\n          value={email}\r\n          type=\"email\"\r\n          placeholder=\"Enter your Email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Password</FormLabel>\r\n        <InputGroup>\r\n          <Input\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Enter your Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            \r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <Button\r\n        colorScheme=\"blue\"\r\n        width=\"100%\"\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n        isLoading={loading}\r\n      >\r\n        Login\r\n      </Button>\r\n      <Button\r\n        variant=\"solid\"\r\n        colorScheme=\"red\"\r\n        width=\"100%\"\r\n        //style={{ marginTop: 15 }}\r\n        onClick={() => {\r\n          setEmail(\"guest@example.com\");\r\n          setPassword(\"123456\");\r\n        }}\r\n      >\r\n        Get Guest User Credentials\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { Container,Box,Text, Tab,Tabs,TabPanel,TabPanels,TabList } from '@chakra-ui/react';\r\nimport React, { useEffect } from 'react';\r\nimport Signup from '../components/Authentication/Signup';\r\nimport Login from '../components/Authentication/Login';\r\nimport { useHistory } from 'react-router-dom';\r\nconst Homepage = () => {\r\n  const history = useHistory();\r\n  \r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    console.log(\"User Info:\", user);\r\n    if (user) {\r\n      history.push(\"/chats\");\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <Container maxW=\"xl\" centerContent>\r\n      <Box\r\n        d=\"flex\"\r\n        justifyContent=\"center\"\r\n        p={3}\r\n        bg=\"white\"\r\n        w=\"100%\"\r\n        m=\"40px 0 15px 0\"\r\n        borderRadius=\"lg\"\r\n        borderWidth=\"1px\"\r\n      >\r\n        <Text fontSize=\"4xl\" fontFamily=\"Work sans\" color=\"black\">\r\n          Talk-A-Tive\r\n        </Text>\r\n      </Box>\r\n      <Box\r\n        bg=\"white\"\r\n        w=\"100%\"\r\n        p={4}\r\n        borderRadius=\"lg\"\r\n        color=\"black\"\r\n        borderWidth=\"1px\"\r\n      >\r\n        <Tabs variant=\"soft-rounded\">\r\n          <TabList mb=\"1em\">\r\n            <Tab width=\"50%\">Login</Tab>\r\n            <Tab width=\"50%\">Sign Up</Tab>\r\n          </TabList>\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <Login/>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Signup/>\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import React from 'react'\r\n\r\nconst ChatBox = () => {\r\n  return <div>ChatBox</div>;\r\n}\r\n\r\nexport default ChatBox\r\n","import { ViewIcon } from '@chakra-ui/icons';\r\nimport { Button, IconButton, Image, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Text, useDisclosure } from '@chakra-ui/react';\r\nimport React from 'react'\r\n\r\nconst ProfileModal = ({user,children}) => {\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n  return (\r\n    <>\r\n      {children ? (\r\n        <span onClick={onOpen}>{children}</span>\r\n      ) : (\r\n        <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\r\n      )}\r\n      <Modal size=\"lg\" isOpen={isOpen} onClose={onClose} isCentered>\r\n        <ModalOverlay />\r\n            <ModalContent h=\"410px\">\r\n            <ModalHeader\r\n                      fontSize=\"40px\"\r\n                      fontFamily=\"Work sans\"\r\n                      d=\"flex\"\r\n                      justifyContent=\"center\"\r\n                  >\r\n            {user.name}\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody\r\n            d=\"flex\"\r\n            flexDir=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\">\r\n            <Image borderRadius=\"full\"\r\n                          boxSize=\"150px\" src={user.pic} alt={user.name} />\r\n                      <Text\r\n                          fontSize={{ base: \"28px\", md: \"30px\" }}\r\n                          fontFamily=\"Work sans\">Email:{ user.email}</Text>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"ghost\">Secondary Action</Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProfileModal;\r\n","import { Skeleton, Stack } from '@chakra-ui/react';\r\nimport React from 'react'\r\n\r\nconst ChatLoading = () => {\r\n  return (\r\n    <Stack>\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default ChatLoading;\r\n","import React from 'react'\r\n//import { ChatState } from '../../Context/ChatProvider';\r\nimport { Avatar, Box, Text } from '@chakra-ui/react';\r\n\r\nconst UserListItem = ({ user, handleFunction }) => {\r\n  return (\r\n    <Box\r\n      onClick={handleFunction}\r\n      cursor=\"pointer\"\r\n      bg=\"#E8E8E8\"\r\n      _hover={{\r\n        background: \"#38B2AC\",\r\n        color: \"white\",\r\n      }}\r\n      w=\"100%\"\r\n      d=\"flex\"\r\n      alignItems=\"center\"\r\n      color=\"black\"\r\n      px={3}\r\n      py={2}\r\n      mb={2}\r\n      borderRadius=\"lg\"\r\n    >\r\n      <Avatar\r\n        mr={2}\r\n        size=\"sm\"\r\n        cursor=\"pointer\"\r\n        name={user.name}\r\n        src={user.pic}\r\n      />\r\n      <Box>\r\n        <Text>{user.name}</Text>\r\n        <Text fontSize=\"xs\">\r\n          <b>Email : </b>\r\n          {user.email}\r\n        </Text>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default UserListItem;\r\n","import { Box,Text, Button, Tooltip, MenuButton, Menu, Avatar, MenuList, MenuItem, MenuDivider, Drawer, useDisclosure, DrawerOverlay, DrawerContent, DrawerHeader, DrawerBody, Input, useToast, Spinner } from '@chakra-ui/react';\r\nimport React, { useState } from 'react';\r\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport { ChatState } from '../../Context/ChatProvider';\r\nimport ProfileModal from './ProfileModal';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport ChatLoading from '../ChatLoading';\r\nimport UserListItem from '../UserAvatar/UserListItem';\r\n//import { config } from 'dotenv';\r\n\r\nconst SideDrawer = ()=> {\r\n    const [search, setSearch] = useState(\"\");\r\n    const [searchResult, setSearchResult] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [loadingChat, setLoadingChat] = useState(false);\r\n  \r\n    const { user, setSelectedChat, chats, setChats } = ChatState();\r\n  \r\n    const history = useHistory();\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    const toast = useToast();\r\n  \r\n    const logoutHandler = () => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    history.push(\"/\");\r\n  };\r\n    \r\n    const handleSearch = async () => {\r\n      if (!search) {\r\n        toast({\r\n          title: \"Please enter something in search\", status: \"warning\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"top-left\",\r\n        });\r\n        return;\r\n      }\r\n      try {\r\n        setLoading(true);\r\n\r\n        const config = {\r\n          headers: {\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n        const { data } = await axios.get(`/api/user?search=${search}`, config);        \r\n        setSearchResult(data);\r\n        setLoading(false);\r\n\r\n      } catch (error) {\r\n        console.error(\r\n          \"Search error:\",\r\n          error.response ? error.response.data : error.message\r\n        );\r\n        toast({\r\n          title: \"Error Occured!\",\r\n          description:\"Failed to Load the Search Results\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom-left\",\r\n        });\r\n        setLoading(false);\r\n      }\r\n    };\r\n  const accessChat = async(userId) => {\r\n      try {\r\n        setLoadingChat(true);\r\n\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n        const { data } = await axios.post(`/api/chat`, { userId }, config);\r\n        if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\r\n        setSelectedChat(data);\r\n        setLoadingChat(false);\r\n        onClose();\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error fetching the chat\",\r\n          description: error.message,\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom-left\",\r\n        });\r\n      }\r\n  };\r\n      return (\r\n        <>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            bg=\"white\"\r\n            w=\"100%\"\r\n            p=\"5px 10px 5px 10px\"\r\n            borderWidth=\"5px\"\r\n          >\r\n            <Tooltip\r\n              label=\"Search Users to chat\"\r\n              hasArrow\r\n              placement=\"bottom-end\"\r\n            >\r\n              <Button variant=\"ghost\" onClick={onOpen}>\r\n                <i class=\"fas fa-search\"></i>\r\n                <Text d={{ base: \"none\", md: \"flex\" }} px=\"4\">\r\n                  Search User\r\n                </Text>\r\n              </Button>\r\n            </Tooltip>\r\n            <Text fontSize=\"2xl\" fontFamily=\"Work sans\">\r\n              Talk-A-Tive\r\n            </Text>\r\n            <div>\r\n              <Menu>\r\n                <MenuButton p={1}>\r\n                  <BellIcon fontSize=\"2xl\" m={1} />\r\n                </MenuButton>\r\n              </Menu>\r\n              <Menu>\r\n                <MenuButton as={Button} rightIcon={<ChevronDownIcon />}>\r\n                  <Avatar\r\n                    size=\"sm\"\r\n                    cursor=\"pointer\"\r\n                    name={user.name}\r\n                    src={user.pic}\r\n                  />\r\n                </MenuButton>\r\n                <MenuList>\r\n                  <ProfileModal user={user}>\r\n                    {/*<MenuItem>My Profile</MenuItem>*/}\r\n                  </ProfileModal>\r\n\r\n                  <MenuDivider />\r\n                  <MenuItem onClick={logoutHandler}>Logout</MenuItem>\r\n                </MenuList>\r\n              </Menu>\r\n            </div>\r\n          </Box>\r\n          <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\r\n            <DrawerOverlay />\r\n            <DrawerContent>\r\n              <DrawerHeader borderBottomWidth=\"1px\"> Search Users</DrawerHeader>\r\n              <DrawerBody>\r\n                <Box d=\"flex\" pb={2}>\r\n                  <Input\r\n                    placeholder=\"Search by name or email\"\r\n                    mr={2}\r\n                    value={search}\r\n                    onChange={(e) => setSearch(e.target.value)}\r\n                  />\r\n                  <Button onClick={handleSearch}> Go</Button>\r\n                </Box>\r\n                {loading ? (\r\n                  <ChatLoading />\r\n                ) : (\r\n                  searchResult?.map((user) => (\r\n                    <UserListItem\r\n                      key={user._id}\r\n                      user={user}\r\n                      handleFunction={() => accessChat(user._id)}\r\n                    />\r\n                  ))\r\n                )}\r\n                {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\r\n              </DrawerBody>\r\n            </DrawerContent>\r\n          </Drawer>\r\n        </>\r\n      );\r\n  };\r\n\r\nexport default SideDrawer;\r\n","import React from 'react';\r\nimport { ChatState } from '../Context/ChatProvider';\r\nimport { useToast } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nconst MyChats = () => {\r\n  const [loggedUser, setLoggedUser] = useState();\r\n\r\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\r\n\r\n  const toast = useToast();\r\n  const fetchChats = async () => {\r\n    // console.log(user._id);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\"/api/chat\", config);\r\n      setChats(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the chats\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n    fetchChats();\r\n  }, []);\r\n  return <div>MyChats</div>;\r\n}\r\n\r\nexport default MyChats;\r\n","import { Box } from \"@chakra-ui/react\";\r\nimport ChatBox from \"../components/ChatBox\";\r\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\r\nimport MyChats from \"../components/MyChats\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst ChatPage = () => {\r\n\r\n  const { user } = ChatState();\r\n\r\n    return (\r\n      <div style={{ width: \"100%\" }}>\r\n        {user && <SideDrawer/>}\r\n        <Box d=\"flex\" justifyContent=\"space-between\" w=\"100%\" h=\"91.5vh\" p=\"10px\">\r\n          {user && <MyChats/>}\r\n          {user && <ChatBox />}\r\n        </Box>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ChatPage;\r\n","import \"./App.css\";\nimport { Route }  from \"react-router-dom\";\nimport Homepage from \"./Pages/Homepage\";\nimport ChatPage from \"./Pages/ChatPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Route path=\"/\" component={Homepage} exact />\n        <Route path=\"/chats\" component={ChatPage} />\n  \n    </div>\n  );\n}\n\nexport default App;\n","// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import './index.css';\n// import App from './App';\n// import { ChakraProvider } from \"@chakra-ui/react\";\n// import { BrowserRouter } from \"react-router-dom\";\n// import ChatProvider from './Context/ChatProvider';\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <BrowserRouter>\n//     <ChatProvider>\n//       <ChakraProvider>\n//         <App />\n//       </ChakraProvider>\n//     </ChatProvider>\n//   </BrowserRouter>\n// );\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport App from \"./App\";\nimport ChatProvider from \"./Context/ChatProvider\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <ChatProvider>\n      <ChakraProvider>\n        <App />\n      </ChakraProvider>\n    </ChatProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}